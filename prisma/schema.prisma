generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Book {
  id              String        @id @default(cuid())
  isbn            String?       @unique
  title           String
  author          String
  publisher       String?
  genre           String?
  description     String?
  totalCopies     Int           @default(1)
  availableCopies Int           @default(1)
  publishedAt     DateTime?     
  addedAt         DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  transactions    Transaction[] 

  @@map("books")
}

model Member {
  id           String        @id @default(cuid())
  name         String
  email        String        @unique
  phone        String?
  address      String?
  joinDate     DateTime      @default(now())
  isActive     Boolean       @default(true)
  updatedAt    DateTime      @updatedAt

  transactions Transaction[]

  @@map("members")
}

model Transaction {
  id          String            @id @default(cuid())
  bookId      String
  memberId    String
  borrowDate  DateTime          @default(now())
  dueDate     DateTime
  returnDate  DateTime?
  status      TransactionStatus @default(BORROWED)
  fineAmount  Float             @default(0)
  notes       String?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  book        Book              @relation(fields: [bookId], references: [id], onDelete: Cascade)
  member      Member            @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

enum TransactionStatus {
  BORROWED
  RETURNED
  OVERDUE
  LOST
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  role      UserRole   @default(LIBRARIAN)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("users")
}

enum UserRole {
  ADMIN
  LIBRARIAN
  MEMBER
}
